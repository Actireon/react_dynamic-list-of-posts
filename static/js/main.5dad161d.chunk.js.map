{"version":3,"sources":["Post/Post.tsx","User/User.tsx","Comment/Comment.tsx","CommentList/CommentList.tsx","PostsList/PostsList.tsx","api.ts","App.tsx","index.tsx"],"names":["Post","post","title","body","className","User","user","name","email","address","street","suite","city","zipcode","Comment","comment","CommentList","comments","map","key","id","PostsList","posts","useState","inputValue","setInputValue","filteredPosts","filter","toLowerCase","includes","trim","postedList","type","value","onChange","event","target","placeholder","API_URL","getData","url","a","fetch","response","json","App","setPosts","isLoading","setLoading","showPosts","Promise","all","loadedPosts","loadedUsers","loadedComments","allPosts","find","person","userId","postId","length","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"uXASaA,G,MAAkB,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,KAAlB,OAC7B,wBAAIC,UAAU,QACZ,4BAAKF,GACL,2BAAIC,MCHKE,G,MAAkB,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,QAAxB,OAC7B,wBAAIL,UAAU,QACZ,wBAAIA,UAAU,eACXG,GAEH,uBAAGH,UAAU,eACX,mDAEOI,KAGT,uBAAGJ,UAAU,iBACX,mDAEOK,EAAQC,SAGf,kDAEOD,EAAQE,QAGf,iDAEOF,EAAQG,OAGf,oDAEOH,EAAQI,cC7BRC,G,MAAqB,SAAC,GAAD,QAAGC,QAAWR,EAAd,EAAcA,KAAMJ,EAApB,EAAoBA,KAAMK,EAA1B,EAA0BA,MAA1B,OAChC,wBAAIJ,UAAU,YACZ,2BAAIG,GACJ,2BAAIJ,GACJ,uBAAGC,UAAU,mBAAb,oBAEOI,OCLEQ,G,MAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACpC,wBAAIb,UAAU,gBACXa,EAASC,KAAI,SAAAH,GAAO,OACnB,kBAAC,EAAD,CAASI,IAAKJ,EAAQK,GAAIL,QAASA,UCD5BM,G,MAAuB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACbC,mBAAS,IADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,KAS3CC,EAAgBJ,EAAMK,QAAO,SAAC1B,GAClC,OACEA,EAAKC,MAAM0B,cAAcC,SAASL,EAAWM,OAAOF,gBACjD3B,EAAKE,KAAKyB,cAAcC,SAASL,EAAWM,OAAOF,kBAIpDG,EAAaP,EAAaE,EAAgBJ,EAEhD,OACE,oCACE,2BACEU,KAAK,OACLC,MAAOT,EACPU,SApBgB,SAACC,GAA0C,IACvDF,EAAUE,EAAMC,OAAhBH,MAERR,EAAcQ,IAkBVI,YAAY,gBAEbN,EAAWb,KAAI,SAAAjB,GAAI,OAClB,wBAAIG,UAAU,OAAOe,IAAKlB,EAAKmB,IAC7B,kBAAC,EAAD,CAAMnB,KAAMA,IACZ,kBAAC,EAAD,CACEK,KAAML,EAAKK,OAEb,6BACA,uBAAGF,UAAU,kBAAb,YACA,kBAAC,EAAD,CAAaa,SAAUhB,EAAKgB,kBC5ChCqB,EAAU,uC,SAEDC,E,8EAAf,WAA0BC,GAA1B,eAAAC,EAAA,sEACyBC,MAAMJ,EAAUE,GADzC,cACQG,EADR,yBAGSA,EAASC,QAHlB,4C,4BAMO,ICwDQC,EAtDC,WAAO,IAAD,EACMtB,mBAAyB,IAD/B,mBACbD,EADa,KACNwB,EADM,OAEYvB,oBAAS,GAFrB,mBAEbwB,EAFa,KAEFC,EAFE,KAIdC,EAAS,uCAAG,sCAAAR,EAAA,6DAChBO,GAAW,GADK,SAONE,QAAQC,IAAI,CDZjBZ,EAAqB,UAIrBA,EAAqB,UAIrBA,EAAwB,eCHb,mCAIda,EAJc,KAKdC,EALc,KAMdC,EANc,KAaVC,EAAWH,EAAYlC,KAAI,SAACjB,GAAD,sBAC5BA,EAD4B,CAE/BK,KAAM+C,EACHG,MAAK,SAACC,GAAD,OACJA,EAAOrC,KAAOnB,EAAKyD,UAEvBzC,SAAUqC,EACP3B,QAAO,SAACZ,GAAD,OACNd,EAAKmB,KAAOL,EAAQ4C,eAI1Bb,EAASS,GACTP,GAAW,GA1BK,4CAAH,qDA6Bf,OACE,oCACI1B,EAAMsC,OAWJ,yBAAKxD,UAAU,OACb,kBAAC,EAAD,CAAWkB,MAAOA,KAVpB,4BACEU,KAAK,SACL6B,QAASZ,EACTa,SAAUf,GAETA,EAAY,aAAe,mBCjDxCgB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.5dad161d.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { PostProps } from '../types';\n\nimport './Post.css';\n\ninterface Props {\n  post: PostProps;\n}\n\nexport const Post: FC<Props> = ({ post: { title, body } }) => (\n  <li className=\"post\">\n    <h2>{title}</h2>\n    <p>{body}</p>\n  </li>\n);\n","import React, { FC } from 'react';\nimport { UserProps } from '../types';\n\nimport './User.css';\n\ninterface Props {\n  user: UserProps;\n}\n\nexport const User: FC<Props> = ({ user: { name, email, address } }) => (\n  <li className=\"user\">\n    <h3 className=\"user__title\">\n      {name}\n    </h3>\n    <p className=\"user__email\">\n      <span>\n        e-mail:\n        {` ${email}`}\n      </span>\n    </p>\n    <p className=\"user__address\">\n      <span>\n        street:\n        {` ${address.street}`}\n      </span>\n\n      <span>\n        suite:\n        {` ${address.suite}`}\n      </span>\n\n      <span>\n        city:\n        {` ${address.city}`}\n      </span>\n\n      <span>\n        zipcode:\n        {` ${address.zipcode}`}\n      </span>\n    </p>\n  </li>\n);\n","import React, { FC } from 'react';\nimport { CommentProps } from '../types';\n\nimport './Comment.css';\n\ninterface Props {\n  comment: CommentProps;\n}\n\nexport const Comment: FC<Props> = ({ comment: { name, body, email } }) => (\n  <li className=\"comments\">\n    <p>{name}</p>\n    <p>{body}</p>\n    <p className=\"comments__email\">\n      Email:\n      {` ${email}`}\n    </p>\n  </li>\n);\n","import React, { FC } from 'react';\nimport { Comment } from '../Comment/Comment';\nimport { CommentProps } from '../types';\n\nimport './CommentList.css';\n\ninterface Props {\n  comments: CommentProps[];\n}\n\nexport const CommentList: FC<Props> = ({ comments }) => (\n  <ul className=\"comment-list\">\n    {comments.map(comment => (\n      <Comment key={comment.id} comment={comment} />\n    ))}\n  </ul>\n);\n","import React, { FC, useState, ChangeEvent } from 'react';\nimport { Post } from '../Post/Post';\nimport { User } from '../User/User';\nimport { CommentList } from '../CommentList/CommentList';\nimport { AllPostProps } from '../types';\n\nimport './PostsList.css';\n\ninterface Props {\n  posts: AllPostProps[];\n}\n\nexport const PostsList: FC<Props> = ({ posts }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const changeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setInputValue(value);\n  };\n\n  const filteredPosts = posts.filter((post) => {\n    return (\n      post.title.toLowerCase().includes(inputValue.trim().toLowerCase())\n      || post.body.toLowerCase().includes(inputValue.trim().toLowerCase())\n    );\n  });\n\n  const postedList = inputValue ? filteredPosts : posts;\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={changeHandler}\n        placeholder=\"Find a post\"\n      />\n      {postedList.map(post => (\n        <ul className=\"card\" key={post.id}>\n          <Post post={post} />\n          <User\n            user={post.user}\n          />\n          <hr />\n          <p className=\"card__comments\">Comments</p>\n          <CommentList comments={post.comments} />\n        </ul>\n      ))}\n    </>\n  );\n};\n","import { PostProps, CommentProps, UserProps } from './types';\n\nconst API_URL = 'https://jsonplaceholder.typicode.com';\n\nasync function getData<T>(url: string): Promise<T> {\n  const response = await fetch(API_URL + url);\n\n  return response.json();\n}\n\nexport const getPosts = (): Promise<PostProps[]> => {\n  return getData<PostProps[]>('/posts');\n};\n\nexport const getUsers = (): Promise<UserProps[]> => {\n  return getData<UserProps[]>('/users');\n};\n\nexport const getComments = (): Promise<CommentProps[]> => {\n  return getData<CommentProps[]>('/comments');\n};\n","import React, { FC, useState } from 'react';\nimport { PostsList } from './PostsList/PostsList';\nimport { getPosts, getUsers, getComments } from './api';\n\nimport './App.css';\n\nimport {\n  AllPostProps,\n  UserProps,\n  CommentProps,\n} from './types';\n\nconst App: FC = () => {\n  const [posts, setPosts] = useState<AllPostProps[]>([]);\n  const [isLoading, setLoading] = useState(false);\n\n  const showPosts = async () => {\n    setLoading(true);\n\n    const [\n      loadedPosts,\n      loadedUsers,\n      loadedComments,\n    ] = await Promise.all([\n      getPosts(),\n      getUsers(),\n      getComments(),\n    ]);\n\n    const allPosts = loadedPosts.map((post) => ({\n      ...post,\n      user: loadedUsers\n        .find((person) => (\n          person.id === post.userId\n        )) as UserProps,\n      comments: loadedComments\n        .filter((comment) => (\n          post.id === comment.postId\n        )) as CommentProps[],\n    }));\n\n    setPosts(allPosts);\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {!posts.length\n        ? (\n          <button\n            type=\"button\"\n            onClick={showPosts}\n            disabled={isLoading}\n          >\n            {isLoading ? 'Loading...' : 'Press to LOAD'}\n          </button>\n        )\n        : (\n          <div className=\"app\">\n            <PostsList posts={posts} />\n          </div>\n        )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}